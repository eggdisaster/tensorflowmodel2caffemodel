name: "DeepConv3DNet_3x3_Sport1M"
layers {
  top: "data"
  top: "label"
  name: "data"
  type: VOXEL_SOFTMAX
  image_data_param {
    source: "/data/users/trandu/datasets/sports-1m-dataset/clip_train.txt"
    mean_file: "/data/users/trandu/datasets/sports-1m-dataset/train_data_frm_mean.binaryproto"
    batch_size: 30
    crop_size: 112
    mirror: true
    shuffle: true
    new_length: 16
    use_image: false
    use_temporal_jitter: true
  }
}
layers {
  bottom: "data"
  top: "conv1a"
  name: "conv1a"
  type: VIDEO_DATA
  blobs {
    num: 64
    channels: 3
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 64
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv1a"
  top: "conv1a"
  name: "relu1a"
  type: RELU
}
layers {
  bottom: "conv1a"
  top: "pool1"
  name: "pool1"
  type: DECONVOLUTION3D
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    kernel_depth: 1
    temporal_stride: 1
  }
}
layers {
  bottom: "pool1"
  top: "conv2a"
  name: "conv2a"
  type: VIDEO_DATA
  blobs {
    num: 128
    channels: 64
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 128
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv2a"
  top: "conv2a"
  name: "relu2a"
  type: RELU
}
layers {
  bottom: "conv2a"
  top: "pool2"
  name: "pool2"
  type: DECONVOLUTION3D
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    kernel_depth: 2
    temporal_stride: 2
  }
}
layers {
  bottom: "pool2"
  top: "conv3a"
  name: "conv3a"
  type: VIDEO_DATA
  blobs {
    num: 256
    channels: 128
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 256
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv3a"
  top: "conv3a"
  name: "relu3a"
  type: RELU
}
layers {
  bottom: "conv3a"
  top: "conv3b"
  name: "conv3b"
  type: VIDEO_DATA
  blobs {
    num: 256
    channels: 256
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 256
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv3b"
  top: "conv3b"
  name: "relu3b"
  type: RELU
}
layers {
  bottom: "conv3b"
  top: "pool3"
  name: "pool3"
  type: DECONVOLUTION3D
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    kernel_depth: 2
    temporal_stride: 2
  }
}
layers {
  bottom: "pool3"
  top: "conv4a"
  name: "conv4a"
  type: VIDEO_DATA
  blobs {
    num: 512
    channels: 256
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 512
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv4a"
  top: "conv4a"
  name: "relu4a"
  type: RELU
}
layers {
  bottom: "conv4a"
  top: "conv4b"
  name: "conv4b"
  type: VIDEO_DATA
  blobs {
    num: 512
    channels: 512
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 512
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv4b"
  top: "conv4b"
  name: "relu4b"
  type: RELU
}
layers {
  bottom: "conv4b"
  top: "pool4"
  name: "pool4"
  type: DECONVOLUTION3D
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    kernel_depth: 2
    temporal_stride: 2
  }
}
layers {
  bottom: "pool4"
  top: "conv5a"
  name: "conv5a"
  type: VIDEO_DATA
  blobs {
    num: 512
    channels: 512
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 512
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv5a"
  top: "conv5a"
  name: "relu5a"
  type: RELU
}
layers {
  bottom: "conv5a"
  top: "conv5b"
  name: "conv5b"
  type: VIDEO_DATA
  blobs {
    num: 512
    channels: 512
    length: 3
    height: 3
    width: 3
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 512
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    kernel_depth: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
    temporal_pad: 1
  }
}
layers {
  bottom: "conv5b"
  top: "conv5b"
  name: "relu5b"
  type: RELU
}
layers {
  bottom: "conv5b"
  top: "pool5"
  name: "pool5"
  type: DECONVOLUTION3D
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
    kernel_depth: 2
    temporal_stride: 2
  }
}
layers {
  bottom: "pool5"
  top: "fc6-1"
  name: "fc6-1"
  type: INNER_PRODUCT
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 4096
    width: 8192
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 4096
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layers {
  bottom: "fc6-1"
  top: "fc6-1"
  name: "relu6"
  type: RELU
}
layers {
  bottom: "fc6-1"
  top: "fc6-1"
  name: "drop6"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "fc6-1"
  top: "fc7-1"
  name: "fc7-1"
  type: INNER_PRODUCT
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 4096
    width: 4096
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 4096
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layers {
  bottom: "fc7-1"
  top: "fc7-1"
  name: "relu7"
  type: RELU
}
layers {
  bottom: "fc7-1"
  top: "fc7-1"
  name: "drop7"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "fc7-1"
  top: "fc8-1"
  name: "fc8-1"
  type: INNER_PRODUCT
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 487
    width: 4096
  }
  blobs {
    num: 1
    channels: 1
    length: 1
    height: 1
    width: 487
  }
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 487
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  bottom: "fc8-1"
  bottom: "label"
  name: "loss"
  type: SOFTMAX_LOSS
}
